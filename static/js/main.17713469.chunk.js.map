{"version":3,"sources":["components/common/Button.jsx","constants.js","components/Filter.jsx","components/Table/Table.jsx","components/ToolTip.jsx","components/Action.jsx","components/BackDrop.jsx","components/common/modal/Modal.jsx","components/common/TextField.jsx","components/common/TextArea.jsx","components/common/Select.jsx","components/EditForm.jsx","components/ViewTodo.jsx","components/ConfirmModel.jsx","App.js","reportWebVitals.js","index.js"],"names":["Button","props","text","classes","onclick","type","className","onClick","defaultProps","actions","icon","title","status","value","label","color","priorities","Filter","handleFilter","onChange","e","target","map","s","Table","data","length","el","name","action","id","colSpan","ToolTip","Action","actionHandler","BackDrop","children","open","handleBackdrop","Modal","handleClose","TextField","TextArea","Select","options","option","defaultValue","description","priority","EditForm","operation","selectedTodo","record","JSON","parse","localStorage","getItem","useState","state","setState","useEffect","formStateHandler","onSubmit","preventDefault","newRecord","todos","oldTodoIndex","findIndex","todo","oldTodo","newTodo","setItem","stringify","ViewTodo","pkey","sKey","find","p","statusList","ConfirmModel","handleConfirm","message","App","setTodo","filter","setFilter","setOpen","confirmOpen","setConfirmOpen","isView","setIsView","setSelectedTodo","setOperation","document","todoArr","todoItem","item","handleCloseModal","removeTodoIndex","splice","task","parseInt","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.17713469.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nfunction Button(props) {\n  const { text, classes, onclick, type } = props;\n  return (\n    <button className={`button ${classes}`} onClick={onclick} type={type}>\n      {text}\n    </button>\n  );\n}\n\nButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  classes: PropTypes.string,\n  type: PropTypes.string,\n};\n\nButton.defaultProps = {\n  type: \"button\",\n};\n\nexport default Button;\n","export const actions = [\n  {\n    icon: \"üëÅ\",\n    text: \"view\",\n    title: \"view\",\n    classes: \"view\",\n  },\n  {\n    icon: \"üñå\",\n    text: \"edit\",\n    title: \"edit\",\n    classes: \"edit\",\n  },\n  {\n    icon: \"üóë\",\n    text: \"delete\",\n    title: \"delete\",\n    classes: \"delete\",\n  },\n];\n\nexport const status = [\n  { value: \"1\", label: \"Create\", color: \"#515155\" },\n  { value: \"2\", label: \"Processing\", color: \"#007fff\" },\n  { value: \"3\", label: \"Pending\", color: \"#e91e63\" },\n  { value: \"4\", label: \"Done\", color: \"#00ff00\" },\n  /* { value: \"5\", label: \"Delete\", color: \"#ff0000\" }, */\n];\n\nexport const record = [\n  {\n    id: 1,\n    task: \"Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\",\n    status: 1,\n  },\n  {\n    id: 2,\n    task: \"second\",\n    status: 3,\n  },\n  {\n    id: 3,\n    task: \"third\",\n    status: 4,\n  },\n];\n\nexport const priorities = [\n  { label: \"Select Priority\", value: \"\" },\n  { label: \"low\", value: \"1\" },\n  { label: \"medium\", value: \"2\" },\n  { label: \"high\", value: \"3\" },\n];\n","import React from \"react\";\nimport { status } from \"../constants.js\";\nimport \"./Filter.css\";\n\nfunction Filter({ handleFilter }) {\n  return (\n    <div className=\"filter\">\n      <label>Task:</label>\n      <select\n        className=\"select-box\"\n        onChange={(e) => handleFilter(e.target.value)}\n      >\n        <option value=\"\">Select filter</option>\n        {status.map((s) => (\n          <option value={s.value} key={s.value}>\n            {s.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nexport default Filter;\n","import React from \"react\";\nimport \"./Table.css\";\n\nfunction Table(props) {\n  const { data } = props;\n  return (\n    <div className=\"overflow-x-auto\">\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>Task</th>\n            <th>Status</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.length > 0 ? (\n            (data ?? []).map((el) => (\n              <tr key={el.id}>\n                <td>{el.name}</td>\n                <td>{el.status}</td>\n                <td>{el.action}</td>\n              </tr>\n            ))\n          ) : (\n            <tr>\n              <td colSpan=\"3\">No Record Found!</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./ToolTip.css\";\n\nfunction ToolTip({ title }) {\n  return <span className=\"tooltiptext\">{title}</span>;\n}\n\nToolTip.propTypes = {\n  title: PropTypes.string.isRequired,\n};\nexport default ToolTip;\n","import React from \"react\";\nimport Button from \"./common/Button\";\nimport ToolTip from \"./ToolTip\";\nimport { actions } from \"../constants\";\nimport \"./Action.css\";\n\nfunction Action({ id, actionHandler }) {\n  return (\n    <div className=\"Action\">\n      {actions.map((action) => (\n        <div className=\"tooltip\" key={action.text}>\n          <Button\n            text={action.icon}\n            classes={action.classes}\n            onclick={() => actionHandler(id, action.title)}\n          />\n          <ToolTip title={action.title} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Action;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"./BackDrop.css\";\n\nfunction BackDrop({ children, open, handleBackdrop }) {\n  return (\n    <div className={`${open ? \"BackDrop\" : \"d-none\"}`}>\n      <div className=\"BackDrop\" onClick={handleBackdrop} />\n      {children}\n    </div>\n  );\n}\n\nBackDrop.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool,\n  handleBackdrop: PropTypes.func.isRequired,\n};\nBackDrop.defaultProps = {\n  open: false,\n};\nexport default BackDrop;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport BackDrop from \"../../BackDrop\";\nimport \"./Modal.css\";\n\nfunction Modal({ children, open, handleClose }) {\n  return (\n    <BackDrop open={open} handleBackdrop={handleClose}>\n      <div className=\"modal\">{children}</div>\n    </BackDrop>\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element])\n    .isRequired,\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./TextField.css\";\n\nfunction TextField({ label, type, name, value, onChange }) {\n  return (\n    <div className=\"form-field\">\n      <label className=\"field-label\">{label}</label>\n      <input\n        type={type}\n        name={name}\n        value={value}\n        onChange={onChange}\n        className=\"field-control\"\n      />\n    </div>\n  );\n}\n\nTextField.propTypes = {\n  type: PropTypes.string,\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\nTextField.defaultProps = {\n  type: \"text\",\n};\nexport default TextField;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./TextField.css\";\n\nfunction TextArea({ label, name, value, onChange }) {\n  return (\n    <div className=\"form-field\">\n      <label className=\"field-label\">{label}</label>\n      <textarea\n        name={name}\n        value={value}\n        onChange={onChange}\n        className=\"field-control\"\n      />\n    </div>\n  );\n}\n\nTextArea.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\nexport default TextArea;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Select({ options, label, name, value, onChange }) {\n  return (\n    <div className=\"form-field\">\n      <label className=\"field-label\">{label}</label>\n      <select\n        name={name}\n        value={value}\n        onChange={onChange}\n        className=\"field-control\"\n      >\n        {options.map((option) => (\n          <option value={option.value} key={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n}\n\nSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n};\nexport default Select;\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./common/modal/Modal\";\nimport TextField from \"./common/TextField\";\nimport TextArea from \"./common/TextArea\";\nimport Button from \"./common/Button\";\nimport Select from \"./common/Select\";\nimport { priorities, status } from \"../constants\";\nimport \"./EditForm.css\";\n\nconst defaultValue = {\n  description: \"\",\n  priority: \"\",\n  name: \"\",\n  status: \"\",\n};\n\nfunction EditForm({ open, handleClose, operation, selectedTodo }) {\n  const { type } = operation;\n  const record = JSON.parse(localStorage.getItem(\"todo\")) ?? [];\n  const [state, setState] = useState(defaultValue);\n\n  useEffect(() => {\n    const initialState = type === \"add\" ? defaultValue : selectedTodo;\n    setState(initialState);\n  }, [type, selectedTodo]);\n\n  const formStateHandler = (e) => {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    let newRecord = [];\n    const { description, priority, name, status, id } = state;\n    if (id && operation.type === \"edit\") {\n      const todos = [...record];\n      const oldTodoIndex = todos.findIndex((todo) => todo.id === id);\n      const oldTodo = { ...todos[oldTodoIndex] };\n      todos[oldTodoIndex] = {\n        ...oldTodo,\n        description,\n        priority,\n        name,\n        status,\n      };\n      newRecord = todos;\n    } else {\n      const newTodo = {\n        id: record.length + 1,\n        description,\n        priority,\n        name,\n        status,\n      };\n\n      newRecord = [...record, newTodo];\n    }\n    localStorage.setItem(\"todo\", JSON.stringify(newRecord));\n    setState(defaultValue);\n    handleClose();\n  };\n  return (\n    <Modal open={open} handleClose={handleClose}>\n      <div>\n        <form onSubmit={submitHandler} className=\"form\">\n          <h2>New Task</h2>\n          <TextField\n            name=\"name\"\n            label=\"Task Name\"\n            value={state.name}\n            onChange={formStateHandler}\n          />\n          <Select\n            options={priorities}\n            value={state.priority}\n            name=\"priority\"\n            label=\"Priority\"\n            onChange={formStateHandler}\n          />\n          <Select\n            options={status}\n            value={state.status}\n            name=\"status\"\n            label=\"status\"\n            onChange={formStateHandler}\n          />\n          <TextArea\n            name=\"description\"\n            value={state.description}\n            label=\"Description\"\n            onChange={formStateHandler}\n          />\n          <Button text=\"Save\" type=\"submit\" classes=\"form-button\" />\n        </form>\n      </div>\n    </Modal>\n  );\n}\n\nEditForm.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default EditForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./common/modal/Modal\";\nimport Button from \"./common/Button\";\nimport { priorities, status as statusList } from \"../constants\";\nimport \"./ViewTodo.css\";\n\nfunction ViewTodo({ open, handleClose, selectedTodo }) {\n  const { name, priority: pkey, status: sKey, description } = selectedTodo;\n\n  const priority = priorities.find((p) => p.value === pkey);\n  const status = statusList.find((s) => s.value === sKey);\n\n  return (\n    <Modal open={open} handleClose={handleClose}>\n      <div className=\"todo-view\">\n        <h2>Todo Task</h2>\n        <div className=\"todo-item\">\n          <label>Name:</label>\n          <p>{name}</p>\n        </div>\n        <div className=\"todo-item\">\n          <label>Priority:</label>\n          <p>{priority?.label}</p>\n        </div>\n        <div className=\"todo-item\">\n          <label>Status:</label>\n          <p>{status?.label}</p>\n        </div>\n        <div className=\"todo-item\">\n          <label>Description:</label>\n          <p>{description}</p>\n        </div>\n        <Button text=\"Close\" classes=\"close-btn\" onclick={handleClose} />\n      </div>\n    </Modal>\n  );\n}\n\nViewTodo.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default ViewTodo;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Modal from \"./common/modal/Modal\";\nimport Button from \"./common/Button\";\nimport \"./ConfirmModel.css\";\n\nfunction ConfirmModel({ open, handleClose, handleConfirm, message, title }) {\n  return (\n    <Modal open={open} handleClose={handleClose}>\n      <div className=\"confirm-model\">\n        <h4>{title}</h4>\n        <p>{message}</p>\n        <div className=\"buttons\">\n          <Button text=\"Close\" onclick={handleClose} />\n          <Button text=\"Confirm\" onclick={handleConfirm} />\n        </div>\n      </div>\n    </Modal>\n  );\n}\n\nConfirmModel.propTypes = {\n  open: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n};\n\nexport default ConfirmModel;\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"./components/common/Button\";\nimport Filter from \"./components/Filter\";\nimport Table from \"./components/Table/Table\";\nimport Action from \"./components/Action\";\nimport { status } from \"./constants.js\";\nimport EditForm from \"./components/EditForm\";\nimport ViewTodo from \"./components/ViewTodo\";\nimport ConfirmModel from \"./components/ConfirmModel\";\nimport \"./App.css\";\n\nfunction App() {\n  const [todo, setTodo] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  const [confirmOpen, setConfirmOpen] = useState(false);\n  const [isView, setIsView] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState({});\n  const [operation, setOperation] = useState({\n    id: \"\",\n    type: \"add\",\n  });\n\n  // localStorage.removeItem(\"todo\");\n  useEffect(() => {\n    document.title = \"Todo List\";\n  });\n\n  useEffect(() => {\n    const todoArr = JSON.parse(localStorage.getItem(\"todo\")) ?? [];\n    if (filter) {\n      setTodo(todoArr.filter((el) => el.status === filter));\n    } else {\n      setTodo(todoArr);\n    }\n  }, [filter]);\n\n  const actionHandler = (id, type) => {\n    setOperation({\n      id,\n      type,\n    });\n    const todoItem = todo.find((item) => item.id === id);\n    setSelectedTodo(todoItem);\n    switch (type) {\n      case \"edit\":\n        setOpen(true);\n        break;\n      case \"view\":\n        setIsView(true);\n        break;\n      case \"delete\":\n        setConfirmOpen(true);\n        break;\n      default:\n    }\n  };\n\n  const todoTaskList = () => {\n    return todo.map((task) => {\n      const { label = \"\", color = \"#000\" } =\n        status.find((el) => parseInt(el.value) === parseInt(task.status)) ?? {};\n      return {\n        ...task,\n        status: <span style={{ color }}>{label}</span>,\n        action: <Action id={task.id} actionHandler={actionHandler} />,\n      };\n    });\n  };\n\n  const handleConfirm = () => {\n    const oldTodo = [...todo];\n    const removeTodoIndex = oldTodo.findIndex(\n      (el) => el.id === selectedTodo.id\n    );\n    oldTodo.splice(removeTodoIndex, 1);\n    localStorage.setItem(\"todo\", JSON.stringify(oldTodo));\n    handleCloseModal();\n  };\n\n  const handleCloseModal = () => {\n    setSelectedTodo({});\n    setOperation({\n      id: \"\",\n      type: \"add\",\n    });\n    setIsView(false);\n    setConfirmOpen(false);\n    setOpen(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <EditForm\n        open={open}\n        handleClose={handleCloseModal}\n        operation={operation}\n        selectedTodo={selectedTodo}\n      />\n\n      <ViewTodo\n        open={isView}\n        handleClose={handleCloseModal}\n        selectedTodo={selectedTodo}\n      />\n\n      <ConfirmModel\n        open={confirmOpen}\n        handleClose={handleCloseModal}\n        handleConfirm={handleConfirm}\n        message=\"Are you sure want to delete?\"\n        title=\"Confirmation\"\n      />\n\n      <header className=\"App-header\">\n        <h2>Todo List</h2>\n        <div className=\"todo-list-controller\">\n          <Button text=\"+\" onclick={() => setOpen(true)} />\n          <Filter handleFilter={setFilter} />\n        </div>\n      </header>\n      <section className=\"App-body\">\n        <div className=\"task-table\">\n          <Table data={todoTaskList()} />\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}